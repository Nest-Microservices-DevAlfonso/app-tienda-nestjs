// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// enum IngredientName {
// tomato
// lemon
// potato
// rice
// ketchup
// lettuce
// onion
// cheese
// meat
// chicken
// } 


model warehouse {
  IngredientName    String   @id      @unique //IngredientName
  quantity          Int
  
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

}

model Order {
  id                String    @id     @default(uuid())
  orderkitchenId    String
  orderStatus       String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  orderDetail OrderDetail[]
  @@index([orderStatus])
}

model OrderDetail {
  id                String    @id     @default(uuid())
  ingredient        String         
  quantity          Int 
  orderId           String 

  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  @@index([orderId])
  order   Order   @relation(fields: [orderId], references: [id])
}






// model PurchaseOrder {
//   id               String         @id     @default(uuid())
//   orderkitchenId   String
//   orderStatus      String
//   createdAt   DateTime      @default(now())
//   updatedAt   DateTime      @updatedAt

//   purchaseOrderDetail PurchaseOrderDetail[]
// }


// model PurchaseOrderDetail {
//   id                String         @id     @default(uuid())
//   ingredient        String         
//   quantity          Int 
//   orderPurchaseid   String 

//   createdAt       DateTime        @default(now())
//   updatedAt       DateTime        @updatedAt

//   @@index([orderPurchaseid])
//   purchaseOrder   PurchaseOrder   @relation(fields: [orderPurchaseid], references: [id])
// }